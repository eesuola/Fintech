
{
  "openapi": "3.0.0",
  "info": {
    "title": "Fintech API",
    "description": "API documentation for the Fintech app with Flutterwave integration and wallet features.",
    "version": "1.0.0",
    "contact": {
      "name": "Fintech Dev Team",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:7070/api",
      "description": "Local Development Server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterUser" }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered successfully" },
          "400": { "description": "Validation error" },
          "409": { "description": "Email or phone already exists" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login with email or phone",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginUser" }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout current user",
        "tags": ["Auth"],
        "responses": {
          "200": { "description": "Logout successful" }
        }
      }
    },
    "/wallet/deposit": {
      "post": {
        "summary": "Initiate deposit",
        "tags": ["Wallet"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DepositRequest" }
            }
          }
        },
        "responses": {
          "201": { "description": "Deposit created, payment link returned" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/wallet/withdraw": {
      "post": {
        "summary": "Withdraw from wallet",
        "tags": ["Wallet"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WithdrawRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Withdraw successful" }
        }
      }
    },
    "/wallet/balance": {
      "get": {
        "summary": "Get wallet balance",
        "tags": ["Wallet"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Wallet balance",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wallet" }
              }
            }
          }
        }
      }
    },
    "/transfer": {
      "post": {
        "summary": "Transfer funds to another user",
        "tags": ["Wallet"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TransferRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Transfer successful" },
          "400": { "description": "Insufficient funds or invalid user" }
        }
      }
    },
    "/wallet/transactions": {
      "get": {
        "summary": "Get user transactions",
        "tags": ["Wallet"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Transaction" }
                }
              }
            }
          }
        }
      }
    },
    "/wallet/convert": {
      "post": {
        "summary": "Convert currency in wallet",
        "tags": ["Wallet"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ConvertRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Conversion successful" },
          "400": { "description": "Invalid currency or insufficient balance" }
        }
      }
    },
    "/bank/webhook": {
      "post": {
        "summary": "Flutterwave webhook",
        "tags": ["Bank"],
        "responses": {
          "200": { "description": "Webhook processed" },
          "403": { "description": "Invalid signature" }
        }
      }
    },
    "/bank/deposit/callback": {
      "get": {
        "summary": "Flutterwave deposit callback",
        "tags": ["Bank"],
        "responses": {
          "200": { "description": "Deposit completed" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegisterUser": {
        "type": "object",
        "required": ["firstName", "lastName", "email", "phoneNumber", "country", "password"],
        "properties": {
          "firstName": { "type": "string", "example": "John" },
          "lastName": { "type": "string", "example": "Doe" },
          "email": { "type": "string", "example": "john@example.com" },
          "phoneNumber": { "type": "string", "example": "+2348012345678" },
          "country": { "type": "string", "example": "Nigeria" },
          "password": { "type": "string", "example": "StrongPassword123" }
        }
      },
      "LoginUser": {
        "type": "object",
        "required": ["emailOrPhone", "password"],
        "properties": {
          "emailOrPhone": { "type": "string", "example": "john@example.com or +2348012345678" },
          "password": { "type": "string", "example": "StrongPassword123" }
        }
      },
      "DepositRequest": {
        "type": "object",
        "required": ["amount", "currency"],
        "properties": {
          "amount": { "type": "number", "example": 5000 },
          "currency": { "type": "string", "example": "NGN" }
        }
      },
      "WithdrawRequest": {
        "type": "object",
        "required": ["amount", "currency"],
        "properties": {
          "amount": { "type": "number", "example": 2000 },
          "currency": { "type": "string", "example": "NGN" }
        }
      },
      "TransferRequest": {
        "type": "object",
        "required": ["recipient", "amount", "currency"],
        "properties": {
          "recipient": { "type": "string", "example": "recipient@example.com or +254712345678" },
          "amount": { "type": "number", "example": 1000 },
          "currency": { "type": "string", "example": "NGN" }
        }
      },
      "ConvertRequest": {
        "type": "object",
        "required": ["fromCurrency", "toCurrency", "amount"],
        "properties": {
          "fromCurrency": { "type": "string", "example": "NGN" },
          "toCurrency": { "type": "string", "example": "USD" },
          "amount": { "type": "number", "example": 5000 }
        }
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "balance": { "type": "number", "example": 10000 },
          "currency": { "type": "string", "example": "NGN" }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string", "example": "deposit" },
          "amount": { "type": "number", "example": 5000 },
          "currency": { "type": "string", "example": "NGN" },
          "date": { "type": "string", "format": "date-time" }
        }
      }
    }
  }
}

